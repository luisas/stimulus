/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/rnaseq -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline functions'

    // Input data
    data         = params.pipelines_testdata_base_path + 'deepmodeloptim/testdata/titanic/titanic_stimulus.csv'
    data_config  = params.pipelines_testdata_base_path + 'deepmodeloptim/testdata/titanic/titanic.yaml'
    model        = params.pipelines_testdata_base_path + 'deepmodeloptim/testdata/titanic/titanic_model.py'
    model_config = params.pipelines_testdata_base_path + 'deepmodeloptim/testdata/titanic/titanic_model.yaml'

    // tune parameters
    tune_trials_range = "2,10,2"
    tune_replicates   = 2

    // predict data
    prediction_data = params.pipelines_testdata_base_path + 'deepmodeloptim/testdata/titanic/titanic_stimulus.csv'

    // output
    save_data    = false
}

// Limit resources so that this can run on GitHub Actions
process {
    maxRetries = params.max_retries
    errorStrategy = params.err_start

    withLabel:process_low {
        cpus   = { 1                    }
        memory = { 4.GB * task.attempt  }
        time   = { 10.m  * task.attempt }
    }
    withLabel:process_medium {
        cpus   = { 2                    }
        memory = { 6.GB * task.attempt  }
        time   = { 30.m  * task.attempt }
    }
    withLabel:process_high {
        cpus   = { 4                    }
        memory = { 8.GB * task.attempt  }
        time   = { 1.h  * task.attempt  }
    }
}
