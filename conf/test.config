/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/rnaseq -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline functions'

    // Input data
    //csv         = params.pipelines_testdata_base_path + "test_data/dna_experiment/input_data.csv"
    //exp_conf    = params.pipelines_testdata_base_path + "test_data/dna_experiment/experiment_config.json"
    //model       = params.pipelines_testdata_base_path + "test_data/dna_experiment/dnatofloat_model.py"
    //tune_conf   = params.pipelines_testdata_base_path + "test_data/dna_experiment/dnatofloat_model_cpu.yaml"
    csv         = "${projectDir}/bin/tests/test_data/dna_experiment/test_with_split.csv"
    exp_conf    = "${projectDir}/examples/test.json"
    model       = "${projectDir}/bin/tests/test_model/dnatofloat_model.py"
    tune_conf   = "${projectDir}/bin/tests/test_model/dnatofloat_model_cpu.yaml"

}

// Limit resources so that this can run on GitHub Actions
process {
    maxRetries = params.max_retries
    errorStrategy = params.err_start

    withLabel:process_low {
        cpus   = { 1                    }
        memory = { 4.GB * task.attempt  }
        time   = { 10.m  * task.attempt }
    }
    withLabel:process_medium {
        cpus   = { 2                    }
        memory = { 6.GB * task.attempt  }
        time   = { 30.m  * task.attempt }
    }
    withLabel:process_high {
        cpus   = { 4                    }
        memory = { 8.GB * task.attempt  }
        time   = { 1.h  * task.attempt  }
    }
}
